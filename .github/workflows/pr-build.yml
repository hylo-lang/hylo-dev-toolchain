name: PR Docker Build

on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches: [main]
    paths-ignore:
      - '*.md'

jobs:
  build_pr_image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate PR tag
        id: pr_tag
        run: |
          # Generate a unique tag for this PR
          PR_TAG="pr-${{ github.event.number }}-$(echo ${{ github.sha }} | head -c7)"
          echo "pr_tag=${PR_TAG}" >> $GITHUB_OUTPUT
          echo "image_tag=ghcr.io/${{ github.repository }}:${PR_TAG}" >> $GITHUB_OUTPUT

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push PR Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.ubuntu
          push: true
          tags: ${{ steps.pr_tag.outputs.image_tag }}

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const prTag = '${{ steps.pr_tag.outputs.pr_tag }}';
            const imageTag = '${{ steps.pr_tag.outputs.image_tag }}';
            
            const body = `## üê≥ Docker Image Built
            
            A Docker image has been built for this PR and is available at:
            \`\`\`
            ${imageTag}
            \`\`\`
            
            ### Testing the image:
            \`\`\`bash
            docker pull ${imageTag}
            docker run --rm -it ${imageTag}
            \`\`\`
            
            **Note:** This experimental image will be automatically cleaned up after the PR is merged or closed.
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

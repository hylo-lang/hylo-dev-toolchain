name: Release Drafter

on:
  push:
    branches: [main]
    paths-ignore:
      - '*.md'
  pull_request:
    types: [opened, reopened, synchronize]
    paths-ignore:
      - '*.md'

permissions:
  contents: read

jobs:
  update_release_draft:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.release_drafter.outputs.tag_name }}
      resolved_version: ${{ steps.release_drafter.outputs.resolved_version }}
      id: ${{ steps.release_drafter.outputs.id }}
    steps:
      - name: Release Drafter
        id: release_drafter
        uses: release-drafter/release-drafter@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_draft_image:
    needs: update_release_draft
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && needs.update_release_draft.outputs.tag_name
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push draft release Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.ubuntu
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ needs.update_release_draft.outputs.tag_name }}
            ghcr.io/${{ github.repository }}:latest-draft

      - name: Comment on release draft
        uses: actions/github-script@v7
        with:
          script: |
            const tagName = '${{ needs.update_release_draft.outputs.tag_name }}';
            const releaseId = '${{ needs.update_release_draft.outputs.id }}';
            const imageTag = `ghcr.io/${{ github.repository }}:${tagName}`;
            
            const body = `## üê≥ Docker Image Available
            
            A Docker image has been built for this draft release and is available at:
            \`\`\`
            ${imageTag}
            \`\`\`
            
            ### Testing the draft release:
            \`\`\`bash
            docker pull ${imageTag}
            docker run --rm -it ${imageTag}
            \`\`\`
            
            **Note:** This is a draft release image. It will be re-tagged as the final release when published.
            `;
            
            try {
              await github.rest.repos.updateRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: releaseId,
                body: body
              });
            } catch (error) {
              console.log('Could not update release body:', error.message);
            }

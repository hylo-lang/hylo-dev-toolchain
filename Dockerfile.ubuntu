FROM swift:6.1.2

# Install the dependencies for the LLVM build.
# Note that we do cleanup in the same layer to save disk space.
RUN apt-get update && \
    apt-get install -y --no-install-recommends gnupg curl libzstd-dev libzstd1 lsb-release make \
       ninja-build tar wget zstd software-properties-common ca-certificates gpg && \
       wget -O - https://apt.kitware.com/kitware-archive.sh | bash && apt-get install -y cmake && cmake --version && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    rm -rf /tmp/* && \
    rm -rf /var/tmp/*

# Add arguments here so that the previous layer doesn't need to be re-run when these change.
ARG HYLO_LLVM_BUILD_TYPE=MinSizeRel
ARG HYLO_LLVM_BUILD_RELEASE=20250910-063105
ARG HYLO_LLVM_VERSION=20.1.6

ENV HYLO_LLVM_DOWNLOAD_URL="https://github.com/hylo-lang/llvm-build/releases/download"

# Get the LLVM builds for the host architecture
RUN file_prefix="llvm-${HYLO_LLVM_VERSION}-$(uname -m)-unknown-linux-gnu" && \
    url_prefix="${HYLO_LLVM_DOWNLOAD_URL}/${HYLO_LLVM_BUILD_RELEASE}/$file_prefix" && \
    download_url="${url_prefix}-${HYLO_LLVM_BUILD_TYPE}.tar.zst" && \
    echo "Downloading LLVM from: ${download_url}" && \
    curl --no-progress-meter -L "${download_url}" | tar -x --zstd -C /opt && \
    ln -s "/opt/${file_prefix}-${HYLO_LLVM_BUILD_TYPE}" "/opt/llvm-${HYLO_LLVM_BUILD_TYPE}"

# Install LLVM globally (add bin to PATH, and the folder containing llvm.pc to PKG_CONFIG_PATH).
ENV PATH="/opt/llvm-${HYLO_LLVM_BUILD_TYPE}/bin:${PATH}"
ENV PKG_CONFIG_PATH="/opt/llvm-${HYLO_LLVM_BUILD_TYPE}/pkgconfig:${PKG_CONFIG_PATH}"
RUN llvm-config --version && pkg-config --exists llvm